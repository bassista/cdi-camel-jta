<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>org.pfry</groupId>
	<artifactId>cdi-jta</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Fabric8 :: Quickstarts :: CDI :: Camel</name>
	<description>Camel route using CDI in a standalone Java Container</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- the version of the BOM, defining all the dependency versions -->
		<fuse.version>6.2.1.redhat-084</fuse.version>
		<fabric8.version>2.2.0.redhat-079</fabric8.version>
		<docker.maven.plugin.version>0.13.6</docker.maven.plugin.version>
        <version.narayana>5.3.2.Final</version.narayana>
        <version.org.jboss.spec.javax.transaction>1.0.0.Final</version.org.jboss.spec.javax.transaction>
        <version.org.jboss.naming>5.0.3.GA</version.org.jboss.naming>
        <version.org.jboss.logging.jboss-logging>3.1.2.GA</version.org.jboss.logging.jboss-logging>
        <version.junit>4.10</version.junit>
        <version.com.h2database>1.3.171</version.com.h2database>
        <version.org.hibernate>4.3.0.Final</version.org.hibernate>
        <version.org.jboss.weld.se>2.1.1.Final</version.org.jboss.weld.se>
        <version.javax>7.0</version.javax>
        <version.org.jboss.jboss-transaction-spi>7.1.1.Final</version.org.jboss.jboss-transaction-spi>
        



		<!-- Docker & Fabric8 Configs -->
		<docker.from>jboss-fuse-6/fis-java-openshift:1.0</docker.from>
		<fabric8.dockerUser>fabric8/</fabric8.dockerUser>
		<docker.image>${fabric8.dockerUser}${project.artifactId}:${project.version}</docker.image>
		<docker.port.container.jolokia>8778</docker.port.container.jolokia>

		<fabric8.label.component>${project.artifactId}</fabric8.label.component>
		<fabric8.label.container>java</fabric8.label.container>
		<fabric8.label.group>quickstarts</fabric8.label.group>
		<fabric8.iconRef>camel</fabric8.iconRef>
	</properties>

	<repositories>
		<repository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Maven Repository Group</name>
			<url>https://repository.jboss.org/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-cdi</artifactId>
			<version>2.15.1.redhat-621084</version> 
		</dependency>
        <!-- JAVAEE 7 API -->
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>${version.javax}</version>
            <scope>provided</scope>
        </dependency>
        <!-- JTA implementation -->
        <dependency>
            <groupId>org.jboss.narayana.jta</groupId>
            <artifactId>narayana-jta</artifactId>
            <version>${version.narayana}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.logmanager</groupId>
                    <artifactId>jboss-logmanager</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- JBoss transaction SPI. Required by JTA 1.2 implementation -->
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-transaction-spi</artifactId>
            <version>${version.org.jboss.jboss-transaction-spi}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging-spi</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- JBoss logging. Required by JTA 1.2 implementation -->
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
            <version>${version.org.jboss.logging.jboss-logging}</version>
        </dependency>
        <!-- Standalone JNDI server -->
        <dependency>
            <groupId>org.jboss.naming</groupId>
            <artifactId>jnpserver</artifactId>
            <version>${version.org.jboss.naming}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging-spi</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Standalone WELD container -->
        <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se</artifactId>
            <version>${version.org.jboss.weld.se}</version>
        </dependency>
        <!-- Entity manager -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${version.org.hibernate}</version>
            <scope>compile</scope>
        </dependency>
        <!-- H2 database -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${version.com.h2database}</version>
            <scope>compile</scope>
        </dependency>
        <!-- JUnit test framework -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>org.apache.deltaspike.cdictrl</groupId>
			<artifactId>deltaspike-cdictrl-weld</artifactId>
			<version>1.5.1</version>
		</dependency>
		        

	</dependencies>


	<build>
		<finalName>${project.artifactId}</finalName>

		<plugins>
			<!-- Compiler plugin enforces Java 1.7 compatibility and activates annotation 
				processors -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<inherited>true</inherited>
				<configuration>
					<excludes>
						<exclude>**/*KT.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
				<version>${fabric8.version}</version>
				<executions>
					<execution>
						<id>json</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>json</goal>
						</goals>
					</execution>
					<execution>
						<id>attach</id>
						<phase>package</phase>
						<goals>
							<goal>attach</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>hawt-app-maven-plugin</artifactId>
				<version>${fabric8.version}</version>
				<executions>
					<execution>
						<id>hawt-app</id>
						<goals>
							<goal>build</goal>
						</goals>
						<configuration>
							<javaMainClass>org.apache.camel.cdi.Main</javaMainClass>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jolokia</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.maven.plugin.version}</version>
				<configuration>
					<images>
						<image>
							<name>${docker.image}</name>
							<build>
								<from>${docker.from}</from>
								<assembly>
									<basedir>/deployments</basedir>
									<descriptorRef>hawt-app</descriptorRef>
								</assembly>
								<env>
									<JAVA_LIB_DIR>/deployments/lib</JAVA_LIB_DIR>
									<JAVA_MAIN_CLASS>org.pfry.boot.Main</JAVA_MAIN_CLASS>
								</env>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>

			<!-- allows the route to be ran via 'mvn exec:java' -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.4.0</version>
				<configuration>
					<mainClass>org.pfry.boot.Main</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- Default sample commands: mvn -Pf8-build ... build Docker images and 
		create OpenShift deployment configs mvn -Pf8-deploy ... f8-build + push to 
		Docker registry + applying deployment config to OpenShift mvn -Pf8-local-deploy 
		... deployment for a single node setup without pushing to a registry For 
		individual goal usage please consult the fabric8 documentation -->
	<profiles>
		<profile>
			<id>f8-build</id>
			<build>
				<defaultGoal>clean install docker:build fabric8:json</defaultGoal>
			</build>
		</profile>
		<profile>
			<id>f8-deploy</id>
			<properties>
				<fabric8.imagePullPolicySnapshot>Always</fabric8.imagePullPolicySnapshot>
				<fabric8.recreate>true</fabric8.recreate>
			</properties>
			<build>
				<defaultGoal>clean install docker:build docker:push fabric8:json fabric8:apply</defaultGoal>
			</build>
		</profile>
		<profile>
			<id>f8-local-deploy</id>
			<properties>
				<fabric8.recreate>true</fabric8.recreate>
			</properties>
			<build>
				<defaultGoal>clean install docker:build fabric8:json fabric8:apply</defaultGoal>
			</build>
		</profile>
	</profiles>

</project>
